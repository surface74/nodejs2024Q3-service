openapi: 3.0.0
paths:
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Not contains required fields
      tags:
        - User
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
      tags:
        - User
  /user/{id}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - User
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid UUID
        '403':
          description: Invalid password
        '404':
          description: Not found
      tags:
        - User
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - User
  /artist:
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Request body does not contain required fields
      tags:
        - Artist
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
      tags:
        - Artist
  /artist/{id}:
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Artist
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Artist
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Artist
  /album:
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Request body does not contain required fields
      tags:
        - Album
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
      tags:
        - Album
  /album/{id}:
    get:
      operationId: AlbumController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Album
    put:
      operationId: AlbumController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Album
    delete:
      operationId: AlbumController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Album
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Album added to favorites
        '400':
          description: Invalid UUID
        '422':
          description: Not exist
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Artist removed from favorites
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Favorites
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Artist added to favorites
        '400':
          description: Invalid UUID
        '422':
          description: Not exist
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Album removed from favorites
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Track added to favorites
        '400':
          description: Invalid UUID
        '422':
          description: Not exist
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Track removed from favorites
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Favorites
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoritesResponse'
      tags:
        - Favorites
  /track:
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Request body does not contain required fields
      tags:
        - Track
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
      tags:
        - Track
  /track/{id}:
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Track
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Track
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '400':
          description: Invalid UUID
        '404':
          description: Not found
      tags:
        - Track
info:
  title: Home Library Service
  description: The Home Library Service description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: Login name
        password:
          type: string
          description: Password
      required:
        - login
        - password
    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: User ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        login:
          type: string
          description: Login name
        version:
          type: number
          description: Autoincremented version
        createdAt:
          type: number
          description: User creation timestamp
          example: 1655000000
        updatedAt:
          type: number
          description: User modification timestamp
          example: 1655000000
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: Current password
        newPassword:
          type: string
          description: New password
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
        grammy:
          type: boolean
          description: Has Grammy awards
      required:
        - name
        - grammy
    Artist:
      type: object
      properties:
        id:
          type: string
          description: Artist ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        name:
          type: string
          description: Artist name
        grammy:
          type: boolean
          description: Has Grammy awards
      required:
        - id
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
        grammy:
          type: boolean
          description: Has Grammy awards
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album name
        year:
          type: number
          description: Issue year
          example: '2020'
        artistId:
          type: string
          description: Artist ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
      required:
        - name
        - year
    Album:
      type: object
      properties:
        id:
          type: string
          description: Album`s ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        name:
          type: string
          description: Album`s name
        year:
          type: number
          description: Issue year
          example: '2020'
        artistId:
          type: string
          description: Artist`s ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
      required:
        - id
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album`s name
        year:
          type: number
          description: Issue year
          example: '2020'
        artistId:
          type: string
          description: Artist`s ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
    Track:
      type: object
      properties:
        id:
          type: string
          description: Track ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        name:
          type: string
          description: Track name
        artistId:
          type: string
          description: Artist ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        albumId:
          type: string
          description: Albums ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        duration:
          type: number
          description: Track duration
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    FavoritesResponse:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        albums:
          type: array
          items:
            $ref: '#/components/schemas/Album'
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
      required:
        - artists
        - albums
        - tracks
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Track name
        artistId:
          type: string
          description: Artist ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        albumId:
          type: string
          description: Album ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        duration:
          type: number
          description: Track duration
      required:
        - name
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Track name
        artistId:
          type: string
          description: Artist ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        albumId:
          type: string
          description: Albums ID (UUID v4)
          example: 5564c9e2-c44b-4d71-b7ce-5362244cd201
        duration:
          type: number
          description: Track duration
      required:
        - duration